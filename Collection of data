from twitter_collect import twitter_connection_setup
import tweepy

###API Search : Récupérer des tweets historiques (7jours précédents) à l'aide de mots clés
def collect():
    connexion = twitter_connection_setup.twitter_setup()
    tweets = connexion.search("Macron",language="french",rpp=100)
    print(tweets)
    for tweet in tweets:
        print(tweet.text)

#collect()



###API Users : récupérer des données sur les utilisateurs et notamment leurs tweets, leurs tweets re-tweetés...
def collect_by_user(user_id):
    connexion = twitter_connection_setup.twitter_setup()
    print(type(user_id))
    statuses = connexion.user_timeline(id = user_id, count = 200)
    for status in statuses:
        print(status.text)
    return statuses

#collect_by_user(25073877)



### API Streaming et Filter : capter et filtrer un flux de tweets en temps réel

from tweepy.streaming import StreamListener
class StdOutListener(StreamListener):

    def on_data(self, data):
        print(data)
        return True

    def on_error(self, status):
        if  str(status) == "420":
            print(status)
            print("You exceed a limited number of attempts to connect to the streaming API")
            return False
        else:
            return True


def collect_by_streaming():
    connexion = twitter_connection_setup.twitter_setup()
    listener = StdOutListener()
    stream=tweepy.Stream(auth = connexion.auth, listener=listener)
    stream.filter(track=['Emmanuel Macron'])

#collect_by_streaming()
